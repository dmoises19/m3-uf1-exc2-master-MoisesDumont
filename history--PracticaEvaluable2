	String intToBinaryWithSeparator(int n, String separator) {
		String str = String.format("%032d", new java.math.BigInteger(Integer.toBinaryString(n)));

		String[] as = str.split("(?<=\\G........)");

		java.util.stream.Stream<String> streamIn = java.util.Arrays.stream(as);

		java.util.stream.Stream<String> streamOut = streamIn.map(s -> {
			java.lang.StringBuilder sb = new java.lang.StringBuilder(s);
			sb.insert(4, '_');
			return sb.toString();
		});

		return streamOut.collect(java.util.stream.Collectors.joining(separator));
	}
	String intToBin(int n) {
		return intToBinaryWithSeparator(n, " , ");
	}
isPrime(3)
isPrime(4)
isPrime(15)
void isPrime(int n){
    boolean primo=true;
      if(n>1){
          for(int i=2; i<= n/2; i++){
              if(n%i==0){
                  primo=false;
               }
		   }
       }else{
	      primo=false;
		  }
		  if(primo){
		  println (n);
		  } else {
    println("");
    }	
}
isPrime(45)
isPrime(7)
isPrime(9)
isPrime(31)
void findPrimes(int a, int b){
    for(int i=a; i<=b; i++){
	   isPrime(i);
	  }
}
findPrimes(23,45)
int gcd(int n, int m){
for(int i =m; i != 0; i = m ){
m = n%m;
n = i ;
}
return(n);
}
gcd(270,192)
int factorial(int n){
if (n < 0){
	return -1;
	}
if (n == 0){
	return 1;
	} else {
	return n * factorial(n-1);
	}
	}
factorial(6)
for(int i = 6;i < 10; i++){
    int a = 7;
    print (i + a + " ");
    }
 int whatPosition (int a[], int b){
	boolean found = false;
	int resultado = 0;
    for(int i = 0; found == false; i++){
		if(a[i] == b){
			found = true;
			resultado = i;
		} 
	}
	return resultado;
	}
int [] a={1,3,324,54,64,22};
whatPosition(a,64
)
whatPosition(a,1)
int overloading(int a){
	return 33;
	}
overloading(4)
int overloading(int a, int b){
	return 34;
	}
overloading(4,6)
overloading(4)
overloading(6,68)
void printChars(int a, int ... b){
	for(int i:b){
		if(i >= 65 && i <= 90){
			println((char)(i));
		} else {
			println("Error: Enter fora del rang [65,90]");
		}	
	}
}
printChars(23,65,45,90,89,65,64,78)